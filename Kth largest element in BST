# return the Kth largest element in the given BST rooted at 'root'
class Solution:
    def __init__(self):
        self.arr=[]
        
    def inorder(self,root):
        if not root:
            return
        self.inorder(root.left)
        self.arr.append(root.data)
        self.inorder(root.right)
         
     
    def kthLargest(self,root, k):
        #your code here
        if not root:
            return 
        self.inorder(root)
        l=len(self.arr)
        return self.arr[l-k]
